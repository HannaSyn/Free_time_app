{"version":3,"sources":["data/dataStore.js","framework/element.js","data/getData.js","components/RenderActivity.js","components/GetNewActivity.js","framework/render.js","data/types.js","components/SetType.js","components/App.js","index.js"],"names":["dataStore","currentType","currentActivity","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","url","getData","fetch","then","response","json","data","type","renderApp","RenderActivity","keys","length","activity","GetNewActivity","Component","Target","componentFunction","target","innerHTML","types","SetType","map","App","getNewActivity","getElementById"],"mappings":"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","file":"src.2d3ba7f7.js","sourceRoot":"../src","sourcesContent":["const dataStore = {\n  currentType: '',\n  currentActivity: {},\n};\n\nexport default dataStore;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","const url = 'https://www.boredapi.com/api/activity/';\n\nexport default function getData() {\n  fetch(\n    window.dataStore.currentType\n      ? `${url}?type=${window.dataStore.currentType.toLowerCase()}`\n      : url,\n  )\n    .then(response => response.json())\n    .then(data => {\n      window.dataStore.currentActivity = data;\n      window.dataStore.currentType = data.type;\n      window.renderApp();\n    });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport getData from '../data/getData';\n\nexport default function RenderActivity() {\n  if (Object.keys(window.dataStore.currentActivity).length) {\n    return <p Class=\"activity\">{window.dataStore.currentActivity.activity}</p>;\n  } else {\n    getData();\n    return <p Class=\"activity\">{window.dataStore.currentActivity.activity}</p>;\n  }\n}\n","import renderActivity from './RenderActivity';\n\nexport default function GetNewActivity() {\n  window.dataStore.currentActivity = {};\n  renderActivity();\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nlet Component, Target;\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param componentFunction - Component function or class\n * @param target - DOM element to attach component to\n */\n\nfunction renderApp(componentFunction = null, target = null) {\n  if (componentFunction) Component = componentFunction;\n  if (target) Target = target;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n}\n\nexport default renderApp;\n","const types = [\n  'Education',\n  'Recreational',\n  'Social',\n  'DIY',\n  'Charity',\n  'Cooking',\n  'Relaxation',\n  'Music',\n  'Busywork',\n];\n\nexport default types;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport types from '../data/types';\nimport getNewActivity from './GetNewActivity';\n\nexport default function SetType() {\n  return (\n    <select\n      name=\"activity-type\"\n      onChange={e => {\n        window.dataStore.currentType = e.target.value;\n        getNewActivity();\n      }}\n    >\n      {types.map(type => {\n        if (window.dataStore.currentType === type.toLowerCase()) {\n          return (\n            <option value={type} selected>\n              {type}\n            </option>\n          );\n        } else {\n          return <option value={type}>{type}</option>;\n        }\n      })}\n    </select>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport SetType from './SetType';\nimport RenderActivity from './RenderActivity';\nimport getNewActivity from './GetNewActivity';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Hello my friend!</h1>\n      <h2>Are you really bored?</h2>\n      <p>Let's see what we can do about it</p>\n      <button\n        onClick={() => {\n          window.dataStore.currentType = '';\n          getNewActivity();\n        }}\n      >\n        Find random activity\n      </button>\n      <SetType />\n      <RenderActivity />\n      <p>Are you still bored?</p>\n      <button onClick={window.getNewActivity}>Find more {window.dataStore.currentType}</button>\n    </>\n  );\n}\n","import dataStore from './data/dataStore';\nimport getNewActivity from './components/GetNewActivity';\nimport renderApp from './framework/render';\nimport App from './components/App';\n\nwindow.renderApp = renderApp;\nwindow.dataStore = dataStore;\nwindow.getNewActivity = getNewActivity;\n\nrenderApp(App, document.getElementById('app'));\n"]}